# Generated by Django 3.1.7 on 2021-04-24 12:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='WpArmActivity',
            fields=[
                ('arm_activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_user_id', models.BigIntegerField()),
                ('arm_type', models.CharField(max_length=50)),
                ('arm_action', models.CharField(max_length=50)),
                ('arm_content', models.TextField()),
                ('arm_item_id', models.BigIntegerField()),
                ('arm_paid_post_id', models.BigIntegerField()),
                ('arm_link', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_ip_address', models.CharField(max_length=50)),
                ('arm_date_recorded', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmAutoMessage',
            fields=[
                ('arm_message_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_message_type', models.CharField(max_length=50)),
                ('arm_message_period_unit', models.IntegerField(blank=True, null=True)),
                ('arm_message_period_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_message_subscription', models.CharField(max_length=255)),
                ('arm_message_subject', models.TextField()),
                ('arm_message_content', models.TextField()),
                ('arm_message_status', models.IntegerField()),
                ('arm_message_send_copy_to_admin', models.IntegerField()),
                ('arm_message_send_diff_msg_to_admin', models.IntegerField()),
                ('arm_message_admin_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Wp_arm_auto_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmBadgesAchievements',
            fields=[
                ('arm_badges_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_badges_parent', models.IntegerField()),
                ('arm_badges_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_badges_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_badges_icon', models.TextField(blank=True, null=True)),
                ('arm_badges_achievement', models.TextField(blank=True, null=True)),
                ('arm_badges_achievement_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_badges_tooltip', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Wp_arm_badges_achievements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmCoupons',
            fields=[
                ('arm_coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_coupon_code', models.CharField(max_length=255)),
                ('arm_coupon_label', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_coupon_discount', models.FloatField()),
                ('arm_coupon_discount_type', models.CharField(max_length=50)),
                ('arm_coupon_period_type', models.CharField(max_length=50)),
                ('arm_coupon_on_each_subscriptions', models.IntegerField(blank=True, null=True)),
                ('arm_coupon_start_date', models.DateTimeField()),
                ('arm_coupon_expire_date', models.DateTimeField()),
                ('arm_coupon_subscription', models.TextField(blank=True, null=True)),
                ('arm_coupon_allow_trial', models.IntegerField()),
                ('arm_coupon_allowed_uses', models.IntegerField()),
                ('arm_coupon_used', models.IntegerField()),
                ('arm_coupon_status', models.IntegerField()),
                ('arm_coupon_added_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_coupons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmDripRules',
            fields=[
                ('arm_rule_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('arm_item_id', models.PositiveBigIntegerField()),
                ('arm_item_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_rule_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_show_old_items', models.IntegerField()),
                ('arm_rule_options', models.TextField(blank=True, null=True)),
                ('arm_rule_plans', models.TextField(blank=True, null=True)),
                ('arm_rule_status', models.IntegerField()),
                ('arm_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_drip_rules',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmEmailTemplates',
            fields=[
                ('arm_template_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_template_name', models.CharField(max_length=255)),
                ('arm_template_slug', models.CharField(max_length=255)),
                ('arm_template_subject', models.CharField(max_length=255)),
                ('arm_template_content', models.TextField()),
                ('arm_template_status', models.IntegerField()),
            ],
            options={
                'db_table': 'Wp_arm_email_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmEntries',
            fields=[
                ('arm_entry_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('arm_entry_email', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_description', models.TextField(blank=True, null=True)),
                ('arm_ip_address', models.TextField(blank=True, null=True)),
                ('arm_browser_info', models.TextField(blank=True, null=True)),
                ('arm_entry_value', models.TextField(blank=True, null=True)),
                ('arm_form_id', models.IntegerField(blank=True, null=True)),
                ('arm_user_id', models.BigIntegerField(blank=True, null=True)),
                ('arm_plan_id', models.IntegerField(blank=True, null=True)),
                ('arm_is_post_entry', models.IntegerField()),
                ('arm_paid_post_id', models.BigIntegerField()),
                ('arm_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmFailAttempts',
            fields=[
                ('arm_fail_attempts_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('arm_user_id', models.BigIntegerField()),
                ('arm_fail_attempts_detail', models.TextField(blank=True, null=True)),
                ('arm_fail_attempts_ip', models.CharField(blank=True, max_length=200, null=True)),
                ('arm_is_block', models.IntegerField()),
                ('arm_fail_attempts_datetime', models.DateTimeField()),
                ('arm_fail_attempts_release_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_fail_attempts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmFormField',
            fields=[
                ('arm_form_field_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_form_field_form_id', models.IntegerField()),
                ('arm_form_field_order', models.IntegerField()),
                ('arm_form_field_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_form_field_option', models.TextField(blank=True, null=True)),
                ('arm_form_field_bp_field_id', models.IntegerField()),
                ('arm_form_field_status', models.IntegerField()),
                ('arm_form_field_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_form_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmForms',
            fields=[
                ('arm_form_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_form_label', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_form_title', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_form_type', models.CharField(blank=True, max_length=100, null=True)),
                ('arm_form_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_is_default', models.IntegerField()),
                ('arm_set_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_set_id', models.IntegerField()),
                ('arm_is_template', models.IntegerField()),
                ('arm_ref_template', models.IntegerField()),
                ('arm_form_settings', models.TextField(blank=True, null=True)),
                ('arm_form_updated_date', models.DateTimeField()),
                ('arm_form_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_forms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmLockdown',
            fields=[
                ('arm_lockdown_id', models.BigAutoField(db_column='arm_lockdown_ID', primary_key=True, serialize=False)),
                ('arm_user_id', models.BigIntegerField()),
                ('arm_lockdown_date', models.DateTimeField()),
                ('arm_release_date', models.DateTimeField()),
                ('arm_lockdown_ip', models.CharField(blank=True, db_column='arm_lockdown_IP', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Wp_arm_lockdown',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmLoginHistory',
            fields=[
                ('arm_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_user_id', models.IntegerField()),
                ('arm_logged_in_ip', models.CharField(max_length=255)),
                ('arm_logged_in_date', models.DateTimeField()),
                ('arm_logout_date', models.DateTimeField()),
                ('arm_login_duration', models.TimeField()),
                ('arm_history_browser', models.CharField(max_length=255)),
                ('arm_history_session', models.CharField(max_length=255)),
                ('arm_login_country', models.CharField(max_length=255)),
                ('arm_user_current_status', models.IntegerField()),
            ],
            options={
                'db_table': 'Wp_arm_login_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmMembers',
            fields=[
                ('arm_member_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('arm_user_id', models.PositiveBigIntegerField()),
                ('arm_user_login', models.CharField(max_length=60)),
                ('arm_user_pass', models.CharField(max_length=64)),
                ('arm_user_nicename', models.CharField(max_length=50)),
                ('arm_user_email', models.CharField(max_length=100)),
                ('arm_user_url', models.CharField(max_length=100)),
                ('arm_user_registered', models.DateTimeField()),
                ('arm_user_activation_key', models.CharField(max_length=60)),
                ('arm_user_status', models.IntegerField()),
                ('arm_display_name', models.CharField(max_length=250)),
                ('arm_user_type', models.IntegerField()),
                ('arm_primary_status', models.IntegerField()),
                ('arm_secondary_status', models.IntegerField()),
            ],
            options={
                'db_table': 'Wp_arm_members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmMembershipSetup',
            fields=[
                ('arm_setup_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_setup_name', models.CharField(max_length=255)),
                ('arm_setup_type', models.IntegerField()),
                ('arm_setup_modules', models.TextField(blank=True, null=True)),
                ('arm_setup_labels', models.TextField(blank=True, null=True)),
                ('arm_status', models.IntegerField()),
                ('arm_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_membership_setup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmMemberTemplates',
            fields=[
                ('arm_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_title', models.TextField(blank=True, null=True)),
                ('arm_slug', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_default', models.IntegerField()),
                ('arm_subscription_plan', models.TextField(blank=True, null=True)),
                ('arm_core', models.IntegerField()),
                ('arm_template_html', models.TextField(blank=True, null=True)),
                ('arm_ref_template', models.IntegerField()),
                ('arm_options', models.TextField(blank=True, null=True)),
                ('arm_html_before_fields', models.TextField(blank=True, null=True)),
                ('arm_html_after_fields', models.TextField(blank=True, null=True)),
                ('arm_enable_admin_profile', models.IntegerField()),
                ('arm_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_member_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmPaymentLog',
            fields=[
                ('arm_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_invoice_id', models.IntegerField()),
                ('arm_user_id', models.BigIntegerField()),
                ('arm_first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_plan_id', models.BigIntegerField()),
                ('arm_old_plan_id', models.BigIntegerField()),
                ('arm_payment_gateway', models.CharField(max_length=50)),
                ('arm_payment_type', models.CharField(max_length=50)),
                ('arm_token', models.TextField(blank=True, null=True)),
                ('arm_payer_email', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_receiver_email', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_transaction_id', models.TextField(blank=True, null=True)),
                ('arm_transaction_payment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('arm_transaction_status', models.TextField(blank=True, null=True)),
                ('arm_payment_date', models.DateTimeField()),
                ('arm_payment_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_payment_cycle', models.IntegerField()),
                ('arm_bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_additional_info', models.TextField(blank=True, null=True)),
                ('arm_payment_transfer_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_amount', models.FloatField()),
                ('arm_currency', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_extra_vars', models.TextField(blank=True, null=True)),
                ('arm_response_text', models.TextField(blank=True, null=True)),
                ('arm_coupon_code', models.CharField(blank=True, max_length=255, null=True)),
                ('arm_coupon_discount', models.FloatField()),
                ('arm_coupon_discount_type', models.CharField(blank=True, max_length=50, null=True)),
                ('arm_coupon_on_each_subscriptions', models.IntegerField(blank=True, null=True)),
                ('arm_is_post_payment', models.IntegerField()),
                ('arm_paid_post_id', models.BigIntegerField()),
                ('arm_is_trial', models.IntegerField()),
                ('arm_display_log', models.IntegerField()),
                ('arm_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_payment_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmSubscriptionPlans',
            fields=[
                ('arm_subscription_plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('arm_subscription_plan_name', models.CharField(max_length=255)),
                ('arm_subscription_plan_description', models.TextField(blank=True, null=True)),
                ('arm_subscription_plan_type', models.CharField(max_length=50)),
                ('arm_subscription_plan_options', models.TextField(blank=True, null=True)),
                ('arm_subscription_plan_amount', models.FloatField()),
                ('arm_subscription_plan_status', models.IntegerField()),
                ('arm_subscription_plan_role', models.CharField(blank=True, max_length=100, null=True)),
                ('arm_subscription_plan_post_id', models.BigIntegerField()),
                ('arm_subscription_plan_is_delete', models.IntegerField()),
                ('arm_subscription_plan_created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'Wp_arm_subscription_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpArmTermmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('arm_term_id', models.PositiveBigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Wp_arm_termmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpCommentmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('comment_id', models.PositiveBigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Wp_commentmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpComments',
            fields=[
                ('comment_id', models.BigAutoField(db_column='comment_ID', primary_key=True, serialize=False)),
                ('comment_post_id', models.PositiveBigIntegerField(db_column='comment_post_ID')),
                ('comment_author', models.TextField()),
                ('comment_author_email', models.CharField(max_length=100)),
                ('comment_author_url', models.CharField(max_length=200)),
                ('comment_author_ip', models.CharField(db_column='comment_author_IP', max_length=100)),
                ('comment_date', models.DateTimeField()),
                ('comment_date_gmt', models.DateTimeField()),
                ('comment_content', models.TextField()),
                ('comment_karma', models.IntegerField()),
                ('comment_approved', models.CharField(max_length=20)),
                ('comment_agent', models.CharField(max_length=255)),
                ('comment_type', models.CharField(max_length=20)),
                ('comment_parent', models.PositiveBigIntegerField()),
                ('user_id', models.PositiveBigIntegerField()),
            ],
            options={
                'db_table': 'Wp_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpLinks',
            fields=[
                ('link_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('link_url', models.CharField(max_length=255)),
                ('link_name', models.CharField(max_length=255)),
                ('link_image', models.CharField(max_length=255)),
                ('link_target', models.CharField(max_length=25)),
                ('link_description', models.CharField(max_length=255)),
                ('link_visible', models.CharField(max_length=20)),
                ('link_owner', models.PositiveBigIntegerField()),
                ('link_rating', models.IntegerField()),
                ('link_updated', models.DateTimeField()),
                ('link_rel', models.CharField(max_length=255)),
                ('link_notes', models.TextField()),
                ('link_rss', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Wp_links',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpOptions',
            fields=[
                ('option_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('option_name', models.CharField(max_length=191, unique=True)),
                ('option_value', models.TextField()),
                ('autoload', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Wp_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpPostmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('post_id', models.PositiveBigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Wp_postmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpPosts',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('post_author', models.PositiveBigIntegerField()),
                ('post_date', models.DateTimeField()),
                ('post_date_gmt', models.DateTimeField()),
                ('post_content', models.TextField()),
                ('post_title', models.TextField()),
                ('post_excerpt', models.TextField()),
                ('post_status', models.CharField(max_length=20)),
                ('comment_status', models.CharField(max_length=20)),
                ('ping_status', models.CharField(max_length=20)),
                ('post_password', models.CharField(max_length=255)),
                ('post_name', models.CharField(max_length=200)),
                ('to_ping', models.TextField()),
                ('pinged', models.TextField()),
                ('post_modified', models.DateTimeField()),
                ('post_modified_gmt', models.DateTimeField()),
                ('post_content_filtered', models.TextField()),
                ('post_parent', models.PositiveBigIntegerField()),
                ('guid', models.CharField(max_length=255)),
                ('menu_order', models.IntegerField()),
                ('post_type', models.CharField(max_length=20)),
                ('post_mime_type', models.CharField(max_length=100)),
                ('comment_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'Wp_posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTermmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('term_id', models.PositiveBigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Wp_termmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTermRelationships',
            fields=[
                ('object_id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('term_taxonomy_id', models.PositiveBigIntegerField()),
                ('term_order', models.IntegerField()),
            ],
            options={
                'db_table': 'Wp_term_relationships',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTerms',
            fields=[
                ('term_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('term_group', models.BigIntegerField()),
            ],
            options={
                'db_table': 'Wp_terms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpTermTaxonomy',
            fields=[
                ('term_taxonomy_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('term_id', models.PositiveBigIntegerField()),
                ('taxonomy', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('parent', models.PositiveBigIntegerField()),
                ('count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'Wp_term_taxonomy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpUsermeta',
            fields=[
                ('umeta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.PositiveBigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Wp_usermeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpUsers',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('user_login', models.CharField(max_length=60)),
                ('user_pass', models.CharField(max_length=255)),
                ('user_nicename', models.CharField(max_length=50)),
                ('user_email', models.CharField(max_length=100)),
                ('user_url', models.CharField(max_length=100)),
                ('user_registered', models.DateTimeField()),
                ('user_activation_key', models.CharField(max_length=255)),
                ('user_status', models.IntegerField()),
                ('display_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'Wp_users',
                'managed': False,
            },
        ),
    ]
